version: 2.1

executors:
  go-executor:
    docker:
      - image: golang:1.22  
  docker-executor:
    docker:
      - image: docker:20.10.7  
  deploy-executor:
    docker:
      - image: amazonlinux:2

jobs:
  build:
    executor: go-executor
    steps:
      - checkout
      - run:
          name: Build Go Application
          command: |
            go mod download
            go build -o service main.go

  build_and_push_image:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: false
      - run:
          name: Install AWS CLI
          command: |
            apk add --no-cache py3-pip
            pip3 install awscli
      - run:
          name: Log in to AWS ECR
          command: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REPO_URL
      - run:
          name: Build Docker Image
          command: |
            docker build -t $ECR_REPO_URL:latest .
      - run:
          name: Push Docker Image
          command: |
            docker push $ECR_REPO_URL:latest

  deploy_to_s3:
    executor: deploy-executor
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            yum install -y python3
            pip3 install awscli
      - run:
          name: Deploy to S3
          command: |
            aws s3 sync ./ s3://unique-service-files-bucket-12345 --delete

  deploy_to_ecs:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            pip install awscli
      - run:
          name: Check for Existing Task Definition
          command: |
            CURRENT_TASK_DEF_ARN=$(aws ecs describe-services \
              --cluster ${AWS_RESOURCE_NAME_PREFIX}-cluster \
              --services ${AWS_RESOURCE_NAME_PREFIX}-service \
              --region us-east-1 \
              --query "services[0].taskDefinition" --output text)
              
            NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
              --family ${AWS_RESOURCE_NAME_PREFIX}-task-def \
              --container-definitions '[{"name":"service","image":"'"${ECR_REPO_URL}:latest"'","essential":true,"memory":512,"cpu":256}]' \
              --region us-east-1 \
              --query "taskDefinition.taskDefinitionArn" --output text)

            if [ "$CURRENT_TASK_DEF_ARN" != "$NEW_TASK_DEF_ARN" ]; then
              aws ecs update-service \
                --cluster ${AWS_RESOURCE_NAME_PREFIX}-cluster \
                --service ${AWS_RESOURCE_NAME_PREFIX}-service \
                --task-definition $NEW_TASK_DEF_ARN \
                --region us-east-1
            else
              echo "No changes in task definition, skipping service update."
            fi

workflows:
  build-deploy:
    jobs:
      - build
      - build_and_push_image:
          requires:
            - build
      - deploy_to_s3:
          requires:
            - build_and_push_image
      - deploy_to_ecs:
          requires:
            - build_and_push_image
          filters:
            branches:
              only: main

